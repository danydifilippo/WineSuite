@model WineSuite.Models.Prenotazione

@{
    ViewBag.Title = "Edit";
}

<div class="container contTable pb-4">
    <div class="row">
        <div class="col-3 p-2" style="background-color:white; height:fit-content">
                <img src="~/Content/img/logoWS.png" style="width:100%"/>
        </div>
            <h2 class="col-9 text-start mt-3 titleEditBook">
        <input type="text" value="@Model.Utenti.Cognome @Model.Utenti.Nome" id="Nome"/> </h2>
        </div>
    <div id="alertName"></div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.IdPrenotazione)

            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row d-flex flex-nowrap justify-content-between">
                <div class="form-group w-auto">
                    @Html.LabelFor(model => model.TotPaxPrenotate, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.TotPaxPrenotate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotPaxPrenotate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group w-auto">
                    @Html.Label("Tot Prenotazione", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @{Html.EnableClientValidation(false);}
                        @Html.EditorFor(model => model.TotDaPagare, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", Value = string.Format("{0:C}", Model.TotDaPagare) } })
                        @{Html.EnableClientValidation(true);}
                        <input class="d-none" id="TotPren" value="@Model.TotDaPagare" />
                    </div>
                </div>
                <div class="form-group w-auto">
                    @Html.LabelFor(model => model.Sconto, htmlAttributes: new { @class = "control-label"})
                    <div>
                        @{Html.EnableClientValidation(false);}
                        @Html.EditorFor(model => model.Sconto, new { htmlAttributes = new { @class = "form-control", @id = "sconto", @type="number" } })
                        @{Html.EnableClientValidation(true);}
                    </div>
                </div>
            </div>
            <div class="form-group w-auto">
                @Html.Label("Tariffe", htmlAttributes: new { @class = "control-label col-md-8" })
                @Html.Label("Nr Pax", htmlAttributes: new { @class = "control-label col-md-3 ps-2" })
                <div class="row tarRow">

                    @foreach (var item in ViewBag.ListaTariffe)
                    {
                        <div class="col-5">
                            <p class="ps-2 mb-0">@item.DescrTariffa</p>
                        </div>
                        <div class="col-3">
                            <p class="mb-0">@item.Tariffa.ToString("c2") </p>
                        </div>
                        <div class="col-3">
                            @foreach (var i in ViewBag.ListaTarPren)
                            {
                                if (i.Tariffe.DescrTariffa == item.DescrTariffa)
                                {
                                    <div class="d-none" id=@item.IdTariffa></div>
                                    <input type="number" value=@i.NrPax class="form-control tarInput" name=@item.Tariffa id=@Model.IdPrenotazione />
                                }
                            }
                        </div>
                    }
                </div>
            </div>
            <div class="row">
                <div class="form-group w-auto">
                    @Html.Label("Tot Degustazione", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @{Html.EnableClientValidation(false);}
                        <input type="number" value="@Model.TotDaPagare" name="totpag" class="form-control" id="totale" />
                        @{Html.EnableClientValidation(true);}
                    </div>
                </div>

                <div class="form-group w-auto">
                    @Html.Label("Pag. Contanti", htmlAttributes: new { @class = "control-label pagLabel" })
                    <div class="pagam">
                        @{Html.EnableClientValidation(false);}
                        @Html.EditorFor(model => model.TotPagContanti, new { htmlAttributes = new { @class = "form-control pag", @type="number"} })
                        @{Html.EnableClientValidation(true);}
                    </div>
                </div>

                <div class="form-group w-auto">
                    @Html.Label("Pag. Carta", htmlAttributes: new { @class = "control-label pagLabel" })
                    <div class="pagam">
                        @{Html.EnableClientValidation(false);}
                        @Html.EditorFor(model => model.TotPagPos, new { htmlAttributes = new { @class = "form-control pag", @type = "number" } })
                        @{Html.EnableClientValidation(true);}
                    </div>
                </div>

                <div class="form-group w-auto">
                    @Html.Label("Ancora Da Saldare", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.Editor("Saldo", new { htmlAttributes = new { @class = "form-control", @id="saldo" } })
                    </div>
                </div>

                <div class="form-group w-auto">
                    @Html.LabelFor(model => model.TotPagato, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @{Html.EnableClientValidation(false);}
                        @Html.EditorFor(model => model.TotPagato, new { htmlAttributes = new { @class = "form-control", @id="TotPagato" } })
                        @{Html.EnableClientValidation(false);}
                    </div>
                </div>
            </div>
            <hr />
            <div class="form-group w-auto d-flex gap-3">
                <div>
                    <input type="submit" value="Modifica solo Prenotazione" class="btn btn-light fs-6" name="save"  />
                </div>
                <div>
                    <input type="submit" value="Salva e Conferma Arrivo" class="btn btn-info fs-6" id="aziendaBtn" />
                </div>
            </div>
        </div>
    }

    <div class="m-2">
        <a href="/Prenotazione/ManageBooking/@Model.IdEvento" style="color: #154166">Annulla</a>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script type="text/javascript">
    $(document).ready(function () {
        var NewName = "";
        $("#Nome").change(function () {
            var nome = $(this).val();
            $.ajax({
                url: '/Prenotazione/ChangeName/',
                method: "GET",
                data: { 'nome': nome },
                success: function (a) {
                    
                    if (a.length == 0) {
                        $("#alertName").append("<div id=\"liveAlertPlaceholder\"><div class=\"alert alert-info alert-dismissible p-4\" role=\"alert\">" +
                            "<div> Il nome inserito non corrisponde a nessun nominativo registrato. Desideri aggiungerlo? </div>" +
                            "<hr/><div><button type=\"button\" class=\"btn btn-success py-1 mx-1\" id=\"AddName\">Aggiungi al<br/>database</button>" +
                            "<button type=\"button\" class=\"btn btn-primary py-1 mx-1 NoRegister\" data-bs-dismiss=\"alert\" aria-label=\"Close\">Continua senza<br/>registrare</button>" +
                            "<button type=\"button\" class=\"btn btn-secondary py-1 mx-1\" id=\"Undo\">Annulla<br/>inserimento</button></div></div></div>")
                    }
                    else {
                        $("#alertName").append("<div id=\"liveAlertPlaceholder\"><div class=\"alert alert-info alert-dismissible p-4\" role=\"alert\">" +
                            "<div>Il nome inserito corrisponde ai seguenti nominativi:<div id=\"Names\"></div>" +
                            "<hr/><button type =\"button\" class=\"btn btn-secondary py-0 float-end mx-1\" id=\"Undo\">Annulla<br/>inserimento</button>" +
                            "<button type=\"button\" class=\"btn btn-secondary py-0 float-end mx-1 NoRegister\" data-bs-dismiss=\"alert\" aria-label=\"Close\">Continua senza<br/>registrare</button>" +
                            "<button type=\"button\" class=\"btn btn-secondary py-0 float-end mx-1\" id=\"RegisterClient\">Inserisci nuovo<br/>cliente</button></div></div></div>");
                        $.each(a, function (index, valore) {
                            $("#Names").append("<hr/>" + valore.Cognome + " " + valore.Nome + " <br/> Tel.: " + valore.Contatto + " <br/> e-mail: " + valore.Email + " </div>" +
                                "<div><button type=\"button\" class=\"btn btn-primary py-1\" id=\"" + valore.IdUtente + "\">Associa a questa prenotazione</button>")
                        })
                    }
                  
                    $(".NoRegister").click(function () {
                        NewName = nome;
                    })
                }
            })
        })
        var arr=[];
        $.each($(".tarInput"), function () {
            var nrpax = parseInt($(this).val())
            var id = parseInt($(this).attr("id"))
            var idTar = parseInt($(this).siblings(".d-none").attr("id"))
            arr.push({ "nrpax" : nrpax, "id" : id, "Tar" : idTar })
        })
        $(".tarInput").change(function () {
            var tot = 0;
            var Tar = parseInt($(this).attr("name"));
            var idTar = parseInt($(this).siblings(".d-none").attr("id"))
            var nrpax = parseInt($(this).val())
            $.each($(".tarInput"), function () {
                var result = ($(this).val()) * parseInt($(this).attr("name"));
                tot += result
            })
            if ($("#sconto").val() > 0) {
                tot -= $("#sconto").val();
            }
            $("#totale").val(tot) 
            var i = arr.find(x => x.Tar == idTar)
            i.nrpax = nrpax 
            var fileData = new FormData();
            var Arr = JSON.stringify(arr)
            fileData.append("arr[]", Arr)

            $.ajax({
                url: '/Prenotazione/AddNewPrices/',
                method: "POST",
                processData: false,
                contentType: false,
                cache: false,
                data: fileData
            })
        })

        $("#sconto").change(function () {  
            if ($("#totale").val() == 0) {
                var TotSc = parseInt($("#TotPren").val()) - $(this).val();
                $("#totale").val(TotSc)
            } else {
                var tot = 0;
                $.each($(".tarInput"), function () {
                    var result = ($(this).val()) * parseInt($(this).attr("name"));
                    tot += result
                })
                if ($("#sconto").val() > 0) {
                    tot -= $("#sconto").val();
                }
                $("#totale").val(tot)              
            }
            
        })

        $(".pag").change(function () {
            
            var totPag = 0;
            $.each($(".pag"), function () {
                var nr = $(this).val()
                if (nr != "") {
                    totPag += parseInt(nr)

                }

            })
          
            if ($("#totale").val() == "") {
                var tot = parseInt($("#TotPren").val())
                var totSaldo = tot - totPag;
            } else { var totSaldo = (parseInt($("#totale").val())) - totPag }
           
            $("#TotPagato").val(totPag);
            if ($("#TotPagato").val() != $("#totale").val()) {
                $("#TotPagato").css("background-color", "#bbddffb0")
            } else { 
                $("#TotPagato").css("background-color", "#b3ffb3b3")
            }
            $("#saldo").val(totSaldo);
            if ($("#saldo").val() != 0) {
                $("#saldo").css("background-color", "#f53f5f7a")
            } else {
                $("#saldo").css("background-color", "#ffffff85")
               
            }
        })
        
    })
</script>